import React, { useState, useEffect } from "react";
import Head from "next/head";
import { setDoc, doc, getDoc } from "firebase/firestore";

import ThemeWrapper from "../../components/ThemeWrapper";
import Navbar from "../../components/Navbar";
import Update from "../../components/Update";
import Timer from "../../components/Timer";
import Card from "../../components/Card";
import styles from "../../styles/UserHoldings.module.css";
import { convertNameToIndex } from "../../cards.config";
import { db } from "../../logic/firebase";

export default function User() {
  const [user, setUser] = useState(null);
  const [userData, setUserData] = useState(null);

  useEffect(async () => {
    const user = JSON.parse(localStorage.getItem("weilai_user")) || null;
    const temp_user_data = await (
      await getDoc(doc(db, "users", user.displayName))
    ).data();
    localStorage.setItem("weilai_data", JSON.stringify(temp_user_data));
    setUser(user);
    setUserData(temp_user_data);
  }, []);

  const burn = async (card) => {
    let temp_data = userData.cards;
    const index = temp_data.indexOf(card);
    if (index > -1) {
      temp_data.splice(index, 1);
    }

    const data = {
      cards: temp_data,
      name: user.displayName,
      profilePic: user.photoURL,
    };

    await setDoc(doc(db, "users", user.displayName), data);
    window.localStorage.setItem("weilai_data", JSON.stringify(data));
    window.location.reload();
  };

  const trade = async (card) => {
    const param = convertNameToIndex(card.name);
    console.log(param);
    window.location.replace(
      `/trade/menu?id=${param}&strength=${card.strength}&health=${card.health}&intelligence=${card.intelligence}`
    );
  };

  const RealCard = ({card}) => (
    <div className={styles.cardWrapper}>
      <Card card={card} />
      <div className={styles.cardButtons}>
        <button className={styles.cardTradeButton} onClick={() => trade(card)}>
          Trade
        </button>
        {/* <button className={styles.cardAuctionButton}>Auction</button> */}
        <button className={styles.cardBurnButton} onClick={() => burn(card)}>
          Burn
        </button>
      </div>
    </div>
  );

  return (
    <>
      <Head>
        <title>Weilai</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://unpkg.com/boxicons@2.1.1/css/boxicons.min.css"
          rel="stylesheet"
        />
      </Head>

      <ThemeWrapper>
        <div className="main_new">
          <Navbar user={user} />
          <Update />
          <Timer className={styles.timer} />
          <p>Your Cards : </p>
          {userData && (
            <div className={styles.cards}>
              {userData.cards.map((card) => (
                <RealCard key={Math.floor(Math.random() * 1617)} card={card}/>
              ))}
            </div>
          )}
        </div>
      </ThemeWrapper>
    </>
  );
}
